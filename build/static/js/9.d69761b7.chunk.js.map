{"version":3,"sources":["components/Reviews/Reviews.js"],"names":["Reviews","movieId","useState","reviews","setReviews","useEffect","fetchMovies","fetchMovieReviews","then","results","length","map","id","author","content"],"mappings":"kLAwCeA,UAnCf,YAA+B,IAAZC,EAAW,EAAXA,QACjB,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,qBAAU,WACRC,IAAYC,kBAAkBN,GAASO,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBL,EAAWK,QACvE,CAACR,IAGF,mCACsB,IAAnBE,EAAQO,OACP,6BACGP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,+BACE,yCAAYD,KACZ,4BAAIC,MAFGF,QAOb","file":"static/js/9.d69761b7.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport fetchMovies from '../Services/ApiService';\n\nfunction Reviews({ movieId }) {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovies.fetchMovieReviews(movieId).then(({ results }) => setReviews(results));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>not found reviews</p>\n      )}\n    </>\n  );\n}\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    }),\n  ),\n};\n\nexport default Reviews;\n"],"sourceRoot":""}